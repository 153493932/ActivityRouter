{
  "name": "Android的Activity路由框架",
  "tagline": "通过注解方式来实现URL打开Activity功能",
  "body": "# Android的Activity路由框架\r\n[![](https://jitpack.io/v/joyrun/ActivityRouter.svg)](https://jitpack.io/#joyrun/ActivityRouter)\r\n\r\n通过注解方式来实现URL打开Activity功能，并支持在WebView和外部浏览器使用，支持多级Activity跳转，支持Bundle、Uri参数注入并转换参数类型。\r\n### 特点\r\n1. 支持注解方式、手动方式注册Activity。\r\n2. 支持注入Bundle、Uri的参数并转换格式。\r\n3. 支持多级跳转。\r\n4. 支持外部浏览器打开。\r\n5. 支持HTTP协议。\r\n6. 支持目标Activity的URL构造器访问。\r\n\r\n### 简单例子\r\n```java\r\n@RouterActivity(\"second\")\r\npublic class SecondActivity extends Activity {\r\n    @RouterField(\"uid\")\r\n    private int uid;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_second);\r\n        Routers.inject(this);\r\n        Log.e(\"uid\", String.valueOf(uid));\r\n    }\r\n}\r\n```\r\n```java\r\nRouters.init(\"joyrun\");//设置Scheme\r\n// 方式一\r\nRoutersHelper.getSecondActivityHelper().withUid(24).start(this);\r\n// 方式二\r\nRouters.startActivity(context, \"joyrun://second?uid=233\");\r\n// 方式三\r\n// 如果AndroidManifest.xml注册了RouterCenterActivity，也可以通过下面的方式打开，如果是APP内部使用，不建议使用。\r\n// startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"joyrun://second?uid=233\")));\r\n```\r\n### 目标Activity的URL构造器访问\r\n使用URL访问有一个缺点就是难以得以目标Activity所需要的参数，同时也需要手工生成URL，使用并不友好，填写的参数名称也容易出错。所以我们就做了一个用于生成目标Activity的URL构造器，减少我们写参数名的代码。会根据注解了RouterField的成员变量生成构造器。\r\n```java\r\n// Routers.startActivity(context, \"joyrun://second?uid=233&name=Wiki\");\r\nRoutersHelper.getSecondActivityHelper().withUid(233).withName(\"Wiki\").start(this);\r\n// Routers.startActivityForResult(context, \"joyrun://second?uid=233&name=Wiki\",1);\r\nRoutersHelper.getSecondActivityHelper().withUid(233).withName(\"Wiki\").startForResult(this,1);\r\n```\r\n\r\n### 多级跳转\r\n\r\n```java\r\n@RouterActivity(\"third\")\r\npublic class ThirdActivity extends BaseActivity {\r\n    @RouterField(\"uid\")\r\n    private int uid;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_third);\r\n        Routers.inject(this);\r\n        Log.e(\"uid\", String.valueOf(uid));\r\n    }\r\n}\r\n```\r\n```java\r\n// 先打开SecondActivity，再打开ThirdActivity\r\nRouters.startActivity(context, \"joyrun://second/third?uid=233\");\r\n```\r\n### Bundle、Uri参数注入（支持单独使用）\r\nRouters.inject(this)方法可以`单独使用`，可以实现注入Bundle、Uri的参数，由于Uri的参数是String类型，所以该框架还支持把String格式的类型转换为目标类型。目前该方法支持double、float、int、boolean、String数据类型。\r\n```java\r\n// Bundle\r\nIntent intent = new Intent(this, SecondActivity.class);\r\nintent.putExtra(\"uid\", \"233\");\r\nstartActivity(intent);\r\n// Uri\r\nIntent intent = new Intent(this, SecondActivity.class);\r\nintent.setData(Uri.parse(\"joyrun://second?uid=233\"));\r\nstartActivity(intent);\r\n// Bundle、Uri\r\nIntent intent = new Intent(this, SecondActivity.class);\r\nintent.setData(Uri.parse(\"joyrun://second?uid=233\"));\r\nintent.putExtra(\"name\", \"Wiki\");\r\nstartActivity(intent);\r\n```\r\n```java\r\n@RouterActivity(\"second\")\r\npublic class SecondActivity extends Activity {\r\n    @RouterField(\"uid\")\r\n    private int uid;\r\n    @RouterField(\"name\")\r\n    private String name;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_second);\r\n        Routers.inject(this);\r\n        Log.e(\"uid\", String.valueOf(uid));\r\n        Log.e(\"name\", String.valueOf(name));\r\n    }\r\n}\r\n```\r\n### 从外部浏览器、其它APP打开\r\n只要在AndroidManifest.xml注册了RouterCenterActivity，即可变成经典的Uri打开，可以支持外部浏览器、其它APP打开内部的Activity。\r\n```xml\r\n<activity android:name=\"com.thejoyrun.router.RouterCenterActivity\">\r\n    <intent-filter>\r\n        <category android:name=\"android.intent.category.DEFAULT\" />\r\n        <action android:name=\"android.intent.action.VIEW\" />\r\n        <data android:scheme=\"joyrun\" />\r\n    </intent-filter>\r\n</activity>\r\n```\r\n```java\r\n// Java代码调用\r\nstartActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"joyrun://second?uid=233&name=Wiki\")));\r\n```\r\n```html\r\n// HTML方式，系统浏览器（不支持微信）\r\n<a href=\"joyrun://second?uid=233&name=Wiki\">打开JoyrunApp的SecondActivity</a>\r\n```\r\n\r\n### 支持HTTP协议\r\n```xml\r\n<activity android:name=\"com.thejoyrun.router.RouterCenterActivity\">\r\n    <intent-filter>\r\n        <category android:name=\"android.intent.category.DEFAULT\" />\r\n        <action android:name=\"android.intent.action.VIEW\" />\r\n        <data android:scheme=\"joyrun\" />\r\n    </intent-filter>\r\n    <intent-filter>\r\n        <category android:name=\"android.intent.category.DEFAULT\" />\r\n        <action android:name=\"android.intent.action.VIEW\" />\r\n        <data android:host=\"www.thejoyrun.com\" android:scheme=\"http\" />\r\n    </intent-filter>\r\n</activity>\r\n```\r\n如果支持HTTP协议，那么URL的结构就要做些修改\r\n```\r\n// joyrun://second?uid=233\r\n// =>\r\nhttp://www.thejoyrun.com/second?uid=233\r\n```\r\n\r\n\r\n## 使用方式\r\n### 配置根目录的build.gradle \r\n```\r\nallprojects {\r\n\trepositories {\r\n\t\t...\r\n\t\tmaven { url \"https://jitpack.io\" }\r\n\t}\r\n\tdependencies {\r\n        classpath 'com.android.tools.build:gradle:1.5.0'\r\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\r\n    }\r\n}\r\n```\r\n### 配置app module的build.gradle \r\n```\r\napply plugin: 'com.android.application'\r\napply plugin: 'com.neenbedankt.android-apt'\r\n\r\ndependencies {\r\n    compile 'com.github.joyrun.ActivityRouter:router:0.3.1'\r\n    apt 'com.github.joyrun.ActivityRouter:router-compiler:0.3.1'\r\n}\r\n```\r\n### 初始化\r\n建议在Application进行初始化\r\n```java\r\n// 必填，填写独特的scheme，避免和其它APP重复\r\nRouters.init(\"joyrun\");\r\n// 可选，如果需要支持HTTP协议就需要填写\r\nRouters.setHttpHost(\"www.thejoyrun.com\");\r\n// 可选，手工注册Activity\r\nRouters.register(new ActivityRouteTableInitializer() {\r\n    @Override\r\n    public void initRouterTable(Map<String, Class<? extends Activity>> router) {\r\n        router.put(\"second2\", SecondActivity.class);\r\n        router.put(\"other://www.thejoyrun.com/second\", SecondActivity.class);\r\n    }\r\n});\r\n// 可选，针对自己的业务做调整\r\nRouters.setFilter(new Filter() {\r\n    public String doFilter(String url) {\r\n    \t//return url.replace(\"joyrun://www.thejoyrun.com/\",\"joyrun://\");\r\n        return url;\r\n    }\r\n});\r\n```\r\n### 配置AndroidManifest\r\n如果需要从外部浏览器打开，就要注册\r\n```xml\r\n<activity android:name=\"com.thejoyrun.router.RouterCenterActivity\">\r\n    <!--配置支持系统浏览器和其它APP打开-->\r\n    <intent-filter>\r\n        <category android:name=\"android.intent.category.DEFAULT\" />\r\n        <action android:name=\"android.intent.action.VIEW\" />\r\n        <data android:scheme=\"joyrun\" />\r\n    </intent-filter>\r\n    <!--如果需要支持HTTP协议，就要配置一下-->\r\n    <intent-filter>\r\n        <category android:name=\"android.intent.category.DEFAULT\" />\r\n        <action android:name=\"android.intent.action.VIEW\" />\r\n        <data android:host=\"www.thejoyrun.com\" android:scheme=\"http\" />\r\n    </intent-filter>\r\n</activity>\r\n```\r\n### 其它说明\r\n#### 多对一映射\r\n一个Activity支持配置多个路径，也支持完整的URL配置\r\n```java\r\n@RouterActivity({\"second\", \"second2\", \"other2://www.thejoyrun.com/second\", \"joyrun://www.thejoyrun.com/second\"})\r\npublic class SecondActivity extends Activity {}\r\n```\r\n#### 手工注册Activity\r\n手工注册，也支持路径注册，也支持完整路径注册，支持多种scheme\r\n```\r\nRouters.register(new ActivityRouteTableInitializer() {\r\n    @Override\r\n    public void initRouterTable(Map<String, Class<? extends Activity>> router) {\r\n        router.put(\"second2\", SecondActivity.class);\r\n        router.put(\"other://www.thejoyrun.com/second\", SecondActivity.class);\r\n    }\r\n});\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}